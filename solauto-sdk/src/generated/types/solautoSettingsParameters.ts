/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Serializer,
  array,
  bytes,
  struct,
  u16,
  u8,
} from '@metaplex-foundation/umi/serializers';
import {
  AutomationSettings,
  AutomationSettingsArgs,
  getAutomationSettingsSerializer,
} from '.';

export type SolautoSettingsParameters = {
  boostToBps: number;
  boostGap: number;
  repayToBps: number;
  repayGap: number;
  targetBoostToBps: number;
  padding1: Array<number>;
  automation: AutomationSettings;
  padding: Uint8Array;
};

export type SolautoSettingsParametersArgs = {
  boostToBps: number;
  boostGap: number;
  repayToBps: number;
  repayGap: number;
  targetBoostToBps: number;
  padding1: Array<number>;
  automation: AutomationSettingsArgs;
  padding: Uint8Array;
};

export function getSolautoSettingsParametersSerializer(): Serializer<
  SolautoSettingsParametersArgs,
  SolautoSettingsParameters
> {
  return struct<SolautoSettingsParameters>(
    [
      ['boostToBps', u16()],
      ['boostGap', u16()],
      ['repayToBps', u16()],
      ['repayGap', u16()],
      ['targetBoostToBps', u16()],
      ['padding1', array(u8(), { size: 6 })],
      ['automation', getAutomationSettingsSerializer()],
      ['padding', bytes({ size: 32 })],
    ],
    { description: 'SolautoSettingsParameters' }
  ) as Serializer<SolautoSettingsParametersArgs, SolautoSettingsParameters>;
}
