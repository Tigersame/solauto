/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  option,
  struct,
  u16,
} from '@metaplex-foundation/umi/serializers';
import {
  AutomationSettingsInp,
  AutomationSettingsInpArgs,
  getAutomationSettingsInpSerializer,
} from '.';

export type SolautoSettingsParametersInp = {
  boostToBps: number;
  boostGap: number;
  repayToBps: number;
  repayGap: number;
  targetBoostToBps: Option<number>;
  automation: Option<AutomationSettingsInp>;
};

export type SolautoSettingsParametersInpArgs = {
  boostToBps: number;
  boostGap: number;
  repayToBps: number;
  repayGap: number;
  targetBoostToBps: OptionOrNullable<number>;
  automation: OptionOrNullable<AutomationSettingsInpArgs>;
};

export function getSolautoSettingsParametersInpSerializer(): Serializer<
  SolautoSettingsParametersInpArgs,
  SolautoSettingsParametersInp
> {
  return struct<SolautoSettingsParametersInp>(
    [
      ['boostToBps', u16()],
      ['boostGap', u16()],
      ['repayToBps', u16()],
      ['repayGap', u16()],
      ['targetBoostToBps', option(u16())],
      ['automation', option(getAutomationSettingsInpSerializer())],
    ],
    { description: 'SolautoSettingsParametersInp' }
  ) as Serializer<
    SolautoSettingsParametersInpArgs,
    SolautoSettingsParametersInp
  >;
}
