/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { PositionTokenUsage, PositionTokenUsageArgs, TokenAmount, TokenAmountArgs } from '.';
export type PositionState = {
    liqUtilizationRateBps: number;
    padding1: Array<number>;
    netWorth: TokenAmount;
    supply: PositionTokenUsage;
    debt: PositionTokenUsage;
    maxLtvBps: number;
    liqThresholdBps: number;
    padding2: Array<number>;
    lastUpdated: bigint;
    padding: Array<number>;
};
export type PositionStateArgs = {
    liqUtilizationRateBps: number;
    padding1: Array<number>;
    netWorth: TokenAmountArgs;
    supply: PositionTokenUsageArgs;
    debt: PositionTokenUsageArgs;
    maxLtvBps: number;
    liqThresholdBps: number;
    padding2: Array<number>;
    lastUpdated: number | bigint;
    padding: Array<number>;
};
export declare function getPositionStateSerializer(): Serializer<PositionStateArgs, PositionState>;
//# sourceMappingURL=positionState.d.ts.map