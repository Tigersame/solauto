/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Account, Context, Pda, PublicKey, RpcAccount, RpcGetAccountOptions, RpcGetAccountsOptions } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type ReferralState = Account<ReferralStateAccountData>;
export type ReferralStateAccountData = {
    bump: Array<number>;
    padding1: Array<number>;
    authority: PublicKey;
    referredByState: PublicKey;
    destFeesMint: PublicKey;
    lookupTable: PublicKey;
    padding: Array<number>;
};
export type ReferralStateAccountDataArgs = ReferralStateAccountData;
export declare function getReferralStateAccountDataSerializer(): Serializer<ReferralStateAccountDataArgs, ReferralStateAccountData>;
export declare function deserializeReferralState(rawAccount: RpcAccount): ReferralState;
export declare function fetchReferralState(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<ReferralState>;
export declare function safeFetchReferralState(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<ReferralState | null>;
export declare function fetchAllReferralState(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<ReferralState[]>;
export declare function safeFetchAllReferralState(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<ReferralState[]>;
export declare function getReferralStateGpaBuilder(context: Pick<Context, 'rpc' | 'programs'>): import("@metaplex-foundation/umi").GpaBuilder<ReferralState, {
    bump: Array<number>;
    padding1: Array<number>;
    authority: PublicKey;
    referredByState: PublicKey;
    destFeesMint: PublicKey;
    lookupTable: PublicKey;
    padding: Array<number>;
}>;
export declare function getReferralStateSize(): number;
//# sourceMappingURL=referralState.d.ts.map