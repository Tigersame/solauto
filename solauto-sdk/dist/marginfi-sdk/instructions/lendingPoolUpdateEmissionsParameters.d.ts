/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Option, OptionOrNullable, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type LendingPoolUpdateEmissionsParametersInstructionAccounts = {
    marginfiGroup: PublicKey | Pda;
    admin: Signer;
    bank: PublicKey | Pda;
    emissionsMint: PublicKey | Pda;
    emissionsTokenAccount: PublicKey | Pda;
    emissionsFundingAccount: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
};
export type LendingPoolUpdateEmissionsParametersInstructionData = {
    discriminator: Array<number>;
    emissionsFlags: Option<bigint>;
    emissionsRate: Option<bigint>;
    additionalEmissions: Option<bigint>;
};
export type LendingPoolUpdateEmissionsParametersInstructionDataArgs = {
    emissionsFlags: OptionOrNullable<number | bigint>;
    emissionsRate: OptionOrNullable<number | bigint>;
    additionalEmissions: OptionOrNullable<number | bigint>;
};
export declare function getLendingPoolUpdateEmissionsParametersInstructionDataSerializer(): Serializer<LendingPoolUpdateEmissionsParametersInstructionDataArgs, LendingPoolUpdateEmissionsParametersInstructionData>;
export type LendingPoolUpdateEmissionsParametersInstructionArgs = LendingPoolUpdateEmissionsParametersInstructionDataArgs;
export declare function lendingPoolUpdateEmissionsParameters(context: Pick<Context, 'programs'>, input: LendingPoolUpdateEmissionsParametersInstructionAccounts & LendingPoolUpdateEmissionsParametersInstructionArgs): TransactionBuilder;
//# sourceMappingURL=lendingPoolUpdateEmissionsParameters.d.ts.map