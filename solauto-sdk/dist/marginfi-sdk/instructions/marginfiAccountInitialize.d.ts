/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type MarginfiAccountInitializeInstructionAccounts = {
    marginfiGroup: PublicKey | Pda;
    marginfiAccount: Signer;
    authority?: Signer;
    feePayer?: Signer;
    systemProgram?: PublicKey | Pda;
};
export type MarginfiAccountInitializeInstructionData = {
    discriminator: Array<number>;
};
export type MarginfiAccountInitializeInstructionDataArgs = {};
export declare function getMarginfiAccountInitializeInstructionDataSerializer(): Serializer<MarginfiAccountInitializeInstructionDataArgs, MarginfiAccountInitializeInstructionData>;
export declare function marginfiAccountInitialize(context: Pick<Context, 'identity' | 'payer' | 'programs'>, input: MarginfiAccountInitializeInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=marginfiAccountInitialize.d.ts.map