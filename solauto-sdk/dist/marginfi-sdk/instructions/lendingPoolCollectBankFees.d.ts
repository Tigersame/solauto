/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type LendingPoolCollectBankFeesInstructionAccounts = {
    marginfiGroup: PublicKey | Pda;
    bank: PublicKey | Pda;
    liquidityVaultAuthority: PublicKey | Pda;
    liquidityVault: PublicKey | Pda;
    insuranceVault: PublicKey | Pda;
    feeVault: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
};
export type LendingPoolCollectBankFeesInstructionData = {
    discriminator: Array<number>;
};
export type LendingPoolCollectBankFeesInstructionDataArgs = {};
export declare function getLendingPoolCollectBankFeesInstructionDataSerializer(): Serializer<LendingPoolCollectBankFeesInstructionDataArgs, LendingPoolCollectBankFeesInstructionData>;
export declare function lendingPoolCollectBankFees(context: Pick<Context, 'programs'>, input: LendingPoolCollectBankFeesInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=lendingPoolCollectBankFees.d.ts.map