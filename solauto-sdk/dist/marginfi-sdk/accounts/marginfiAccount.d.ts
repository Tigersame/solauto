/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Account, Context, Pda, PublicKey, RpcAccount, RpcGetAccountOptions, RpcGetAccountsOptions } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { LendingAccount, LendingAccountArgs } from '../types';
export type MarginfiAccount = Account<MarginfiAccountAccountData>;
export type MarginfiAccountAccountData = {
    discriminator: Array<number>;
    group: PublicKey;
    authority: PublicKey;
    lendingAccount: LendingAccount;
    /**
     * The flags that indicate the state of the account.
     * This is u64 bitfield, where each bit represents a flag.
     *
     * Flags:
     * - DISABLED_FLAG = 1 << 0 = 1 - This flag indicates that the account is disabled,
     * and no further actions can be taken on it.
     */
    accountFlags: bigint;
    padding: Array<bigint>;
};
export type MarginfiAccountAccountDataArgs = {
    group: PublicKey;
    authority: PublicKey;
    lendingAccount: LendingAccountArgs;
    /**
     * The flags that indicate the state of the account.
     * This is u64 bitfield, where each bit represents a flag.
     *
     * Flags:
     * - DISABLED_FLAG = 1 << 0 = 1 - This flag indicates that the account is disabled,
     * and no further actions can be taken on it.
     */
    accountFlags: number | bigint;
    padding: Array<number | bigint>;
};
export declare function getMarginfiAccountAccountDataSerializer(): Serializer<MarginfiAccountAccountDataArgs, MarginfiAccountAccountData>;
export declare function deserializeMarginfiAccount(rawAccount: RpcAccount): MarginfiAccount;
export declare function fetchMarginfiAccount(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<MarginfiAccount>;
export declare function safeFetchMarginfiAccount(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<MarginfiAccount | null>;
export declare function fetchAllMarginfiAccount(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<MarginfiAccount[]>;
export declare function safeFetchAllMarginfiAccount(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<MarginfiAccount[]>;
export declare function getMarginfiAccountGpaBuilder(context: Pick<Context, 'rpc' | 'programs'>): import("@metaplex-foundation/umi").GpaBuilder<MarginfiAccount, {
    discriminator: Array<number>;
    group: PublicKey;
    authority: PublicKey;
    lendingAccount: LendingAccountArgs;
    accountFlags: number | bigint;
    padding: Array<number | bigint>;
}>;
export declare function getMarginfiAccountSize(): number;
//# sourceMappingURL=marginfiAccount.d.ts.map